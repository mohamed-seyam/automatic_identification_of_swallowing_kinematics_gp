# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'design.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QPixmap, QMovie
from   PyQt5.QtWidgets import *
from   PyQt5.QtGui     import *
from   PyQt5.QtCore    import *


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")

        # open video button
        self.openButton = QtWidgets.QPushButton(self.centralwidget)
        self.openButton.setObjectName("openButton")
        self.horizontalLayout.addWidget(self.openButton)
        
        # video path text edit
        self.pathTextEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.pathTextEdit.setObjectName("pathTextEdit")
        self.horizontalLayout.addWidget(self.pathTextEdit)
        
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.verticalLayout_7.addLayout(self.horizontalLayout)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.verticalLayout_7.addLayout(self.horizontalLayout_4)
        self.line_5 = QtWidgets.QFrame(self.centralwidget)
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.verticalLayout_7.addWidget(self.line_5)
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        
        # size policy of extention by 100 H and 100 V for the selected object
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)

        # video layout (added when the user opens a video)
        self.videoLayout = QtWidgets.QVBoxLayout()
        self.videoLayout.setObjectName("videoLayout")
        
        # spacerItem1 = QtWidgets.QSpacerItem(75, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        # self.videoLayout.addItem(spacerItem1)
        
        # video label for video viewing
        self.video = QtWidgets.QLabel(self.centralwidget)
        self.video.setMinimumSize(QtCore.QSize(400, 450))
        sizePolicy.setHeightForWidth(self.video.sizePolicy().hasHeightForWidth())
        self.video.setText("")
        self.video.setObjectName("video")
        self.videoLayout.addWidget(self.video)
        
        # scroll bar for video progress
        self.scrollBar = QtWidgets.QScrollBar(self.centralwidget)
        sizePolicy.setHeightForWidth(self.scrollBar.sizePolicy().hasHeightForWidth())
        self.scrollBar.setTabletTracking(False)
        self.scrollBar.setFocusPolicy(QtCore.Qt.NoFocus)
        # self.scrollBar.setAutoFillBackground(True)
        self.scrollBar.setOrientation(QtCore.Qt.Horizontal)
        self.scrollBar.setObjectName("scrollBar")
        self.videoLayout.addWidget(self.scrollBar)
        
        # image of static, dynamic and pharyngial phases distribution (to help the user scroll over the video)
        self.s_d_gnd_truth_dist_label = QtWidgets.QLabel(self.centralwidget)
        self.s_d_gnd_truth_dist_label.setText("dynamic regions ground truth")
        self.s_d_gnd_truth_dist_label.setObjectName("s_d_gnd_truth_dist_label")
        self.videoLayout.addWidget(self.s_d_gnd_truth_dist_label)

        self.s_d_gnd_truth_dist = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.s_d_gnd_truth_dist.sizePolicy().hasHeightForWidth())
        self.s_d_gnd_truth_dist.setSizePolicy(sizePolicy)
        self.s_d_gnd_truth_dist.setText("")
        self.s_d_gnd_truth_dist.setObjectName("s_d_gnd_truth_dist")
        self.videoLayout.addWidget(self.s_d_gnd_truth_dist)

        # image of static, dynamic and pharyngial phases distribution (to help the user scroll over the video)
        self.s_d_after_filter_dist_label = QtWidgets.QLabel(self.centralwidget)
        self.s_d_after_filter_dist_label.setText("dynamic regions predicted")
        self.s_d_after_filter_dist_label.setObjectName("s_d_after_filter_dist_label")
        self.videoLayout.addWidget(self.s_d_after_filter_dist_label)

        self.s_d_after_filter_dist = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.s_d_after_filter_dist.sizePolicy().hasHeightForWidth())
        self.s_d_after_filter_dist.setSizePolicy(sizePolicy)
        self.s_d_after_filter_dist.setText("")
        self.s_d_after_filter_dist.setObjectName("s_d_after_filter_dist")
        self.videoLayout.addWidget(self.s_d_after_filter_dist)

        # image of static, dynamic and pharyngial phases distribution (to help the user scroll over the video)
        self.pharyngeal_gnd_truth_dist_label = QtWidgets.QLabel(self.centralwidget)
        self.pharyngeal_gnd_truth_dist_label.setText("pharyngeal regions ground truth")
        self.pharyngeal_gnd_truth_dist_label.setObjectName("pharyngeal_gnd_truth_dist_label")
        self.videoLayout.addWidget(self.pharyngeal_gnd_truth_dist_label)

        self.pharyngeal_gnd_truth_dist = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pharyngeal_gnd_truth_dist.sizePolicy().hasHeightForWidth())
        self.pharyngeal_gnd_truth_dist.setSizePolicy(sizePolicy)
        self.pharyngeal_gnd_truth_dist.setText("")
        self.pharyngeal_gnd_truth_dist.setObjectName("pharyngeal_gnd_truth_dist")
        self.videoLayout.addWidget(self.pharyngeal_gnd_truth_dist)

        # image of static, dynamic and pharyngial phases distribution (to help the user scroll over the video)
        self.pharyngeal_after_filter_dist_label = QtWidgets.QLabel(self.centralwidget)
        self.pharyngeal_after_filter_dist_label.setText("pharyngeal regions predicted")
        self.pharyngeal_after_filter_dist_label.setObjectName("pharyngeal_after_filter_dist_label")
        self.videoLayout.addWidget(self.pharyngeal_after_filter_dist_label)

        self.pharyngeal_after_filter_dist = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pharyngeal_after_filter_dist.sizePolicy().hasHeightForWidth())
        self.pharyngeal_after_filter_dist.setSizePolicy(sizePolicy)
        self.pharyngeal_after_filter_dist.setText("")
        self.pharyngeal_after_filter_dist.setObjectName("pharyngeal_after_filter_dist")
        self.videoLayout.addWidget(self.pharyngeal_after_filter_dist)
        
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        
        # pause/resume button
        self.pause_resume_button = QtWidgets.QPushButton(self.centralwidget)
        self.pause_resume_button.setObjectName("pause_resume_button")
        self.horizontalLayout_3.addWidget(self.pause_resume_button)
        
        # previous frame button
        self.prevFrameButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.prevFrameButton.sizePolicy().hasHeightForWidth())
        self.prevFrameButton.setSizePolicy(sizePolicy)
        self.prevFrameButton.setObjectName("prevFrameButton")
        self.horizontalLayout_3.addWidget(self.prevFrameButton)
        
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        
        # current frame/time label (for display)
        self.framesLabel = QtWidgets.QLabel(self.centralwidget)
        self.framesLabel.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.framesLabel.setText("")
        self.framesLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.framesLabel.setObjectName("framesLabel")
        self.verticalLayout.addWidget(self.framesLabel)
        
        self.horizontalLayout_3.addLayout(self.verticalLayout)
        
        # next frame button
        self.nextFrameButton = QtWidgets.QPushButton(self.centralwidget)
        self.nextFrameButton.setObjectName("nextFrameButton")
        self.horizontalLayout_3.addWidget(self.nextFrameButton)
        
        # go to button (opens a widget with 3 options: search with time, frame idx or skip current static region)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_3.addWidget(self.pushButton)
        
        self.videoLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_8.addLayout(self.videoLayout)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.horizontalLayout_8.addLayout(self.horizontalLayout_7)
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        
        # hyoid tracking option
        self.hyoidTracking = QtWidgets.QCheckBox(self.groupBox)
        self.hyoidTracking.setObjectName("hyoid bone")
        self.verticalLayout_8.addWidget(self.hyoidTracking)
        
        # bolus tracking option
        self.bolusTracking = QtWidgets.QCheckBox(self.groupBox)
        self.bolusTracking.setObjectName("bolus")
        self.verticalLayout_8.addWidget(self.bolusTracking)

        # c2-c4 tracking option
        self.c2_c4_tracking = QtWidgets.QCheckBox(self.groupBox)
        self.c2_c4_tracking.setObjectName("c2-c4")
        self.verticalLayout_8.addWidget(self.c2_c4_tracking)

        self.displacement_options_cb = QComboBox(self.groupBox)
        self.displacement_options_cb.addItem("None")
        self.displacement_options_cb.addItem("anterior x displacement")
        self.displacement_options_cb.addItem("posterior x displacement")
        self.displacement_options_cb.addItem("anterior y displacement")
        self.displacement_options_cb.addItem("posterior y displacement")
        self.displacement_options_cb.addItem("anterior total displacement")
        self.displacement_options_cb.addItem("posterior total displacement")
        self.verticalLayout_8.addWidget(self.displacement_options_cb)

        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        self.label_6.setObjectName("label_6")
        self.verticalLayout_5.addWidget(self.label_6)
        self.contrastSlider = QtWidgets.QSlider(self.groupBox)
        self.contrastSlider.setOrientation(QtCore.Qt.Vertical)
        self.contrastSlider.setObjectName("contrastSlider")
        self.contrastSlider.setMinimum(100)
        self.contrastSlider.setMaximum(200)
        self.contrastSlider.setSliderPosition(0)
        self.verticalLayout_5.addWidget(self.contrastSlider)
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setObjectName("label")
        self.verticalLayout_5.addWidget(self.label)
        self.horizontalLayout_5.addLayout(self.verticalLayout_5)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_4.addWidget(self.label_5)
        self.brightnessSlider = QtWidgets.QSlider(self.groupBox)
        self.brightnessSlider.setOrientation(QtCore.Qt.Vertical)
        self.brightnessSlider.setObjectName("brightnessSlider")
        self.brightnessSlider.setMinimum(0)
        self.brightnessSlider.setMaximum(100)
        self.brightnessSlider.setSliderPosition(0)
        self.verticalLayout_4.addWidget(self.brightnessSlider)
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_4.addWidget(self.label_2)
        self.horizontalLayout_5.addLayout(self.verticalLayout_4)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_2.addWidget(self.label_4)
        self.fpsSlider = QtWidgets.QSlider(self.groupBox)
        self.fpsSlider.setOrientation(QtCore.Qt.Vertical)
        self.fpsSlider.setObjectName("fpsSlider")
        self.fpsSlider.setMinimum(0)
        self.fpsSlider.setMaximum(120)
        self.fpsSlider.setSliderPosition(30)
        self.verticalLayout_2.addWidget(self.fpsSlider)
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_2.addWidget(self.label_3)
        self.horizontalLayout_5.addLayout(self.verticalLayout_2)
        self.verticalLayout_8.addLayout(self.horizontalLayout_5)
        
        # extra tools button (opens a widget with extra tools and control over the application)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_8.addItem(spacerItem2)
        self.extraToolsButton = QtWidgets.QToolButton(self.groupBox)
        self.extraToolsButton.setObjectName("extraToolsButton")
        self.verticalLayout_8.addWidget(self.extraToolsButton)
        
        self.horizontalLayout_8.addWidget(self.groupBox)
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.verticalLayout_9.addItem(spacerItem3)
        
        self.inlineReport = QtWidgets.QTableWidget(self.centralwidget)
        self.inlineReport.setMaximumSize(QtCore.QSize(300, 150))
        self.inlineReport.setMinimumSize(QtCore.QSize(200, 150))
        self.inlineReport.setStyleSheet("")
        self.inlineReport.setObjectName("inlineReport")
        self.inlineReport.setColumnCount(3)
        self.inlineReport.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.inlineReport.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.inlineReport.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.inlineReport.setHorizontalHeaderItem(2, item)
        self.inlineReport.setColumnWidth(0, 75)
        self.inlineReport.setColumnWidth(1, 75)
        self.inlineReport.setColumnWidth(2, 100)
        self.verticalLayout_9.addWidget(self.inlineReport)

        self.inlineReport.hide()


        self.inlineReport_2 = QtWidgets.QTableWidget(self.centralwidget)
        self.inlineReport_2.setMaximumSize(QtCore.QSize(300, 150))
        self.inlineReport_2.setMinimumSize(QtCore.QSize(200, 150))
        self.inlineReport_2.setStyleSheet("")
        self.inlineReport_2.setObjectName("inlineReport")
        self.inlineReport_2.setColumnCount(3)
        self.inlineReport_2.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.inlineReport_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.inlineReport_2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.inlineReport_2.setHorizontalHeaderItem(2, item)
        self.inlineReport_2.setColumnWidth(0, 75)
        self.inlineReport_2.setColumnWidth(1, 75)
        self.inlineReport_2.setColumnWidth(2, 100)
        self.verticalLayout_9.addWidget(self.inlineReport_2)

        self.inlineReport_2.hide()

        self.hdbone_displacement_output_img = QtWidgets.QLabel(self.centralwidget)
        self.hdbone_displacement_output_img.setText("")
        self.hdbone_displacement_output_img.setObjectName("hyoid bone displacement")
        self.verticalLayout_9.addWidget(self.hdbone_displacement_output_img)
        
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_9.addItem(spacerItem4)
        self.horizontalLayout_8.addLayout(self.verticalLayout_9)
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.horizontalLayout_8.addWidget(self.line_3)
        self.verticalLayout_6.addLayout(self.horizontalLayout_8)
        self.line_4 = QtWidgets.QFrame(self.centralwidget)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.verticalLayout_6.addWidget(self.line_4)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        
        # # process progress bar
        # self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        # self.progressBar.setProperty("value", 24)
        # self.progressBar.setObjectName("progressBar")
        # self.horizontalLayout_6.addWidget(self.progressBar)
        
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem5)

        # current running process label
        self.runningProcessLabel = QtWidgets.QLabel(self.centralwidget)
        self.runningProcessLabel.setObjectName("runningProcessLabel")
        self.horizontalLayout_6.addWidget(self.runningProcessLabel)

        # loader GIF player        
        self.loaderGIF = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.loaderGIF.sizePolicy().hasHeightForWidth())
        self.loaderGIF.setSizePolicy(sizePolicy)
        self.loaderGIF.setMinimumSize(QtCore.QSize(40, 40))
        self.loaderGIF.setObjectName("loaderGIF")
        self.horizontalLayout_6.addWidget(self.loaderGIF)
        # Loading the GIF
        self.loaderMovie = QMovie("media/loader.gif")
        self.loaderMovie.setScaledSize(QSize().scaled(40, 40, Qt.KeepAspectRatio))
        self.loaderGIF.setMovie(self.loaderMovie)
        
        self.verticalLayout_6.addLayout(self.horizontalLayout_6)
        self.verticalLayout_7.addLayout(self.verticalLayout_6)
        self.horizontalLayout_9.addLayout(self.verticalLayout_7)
        self.horizontalLayout_2.addLayout(self.horizontalLayout_9)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 748, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        
        # new window action
        self.actionNew_window = QtWidgets.QAction(MainWindow)
        self.actionNew_window.setObjectName("actionNew_window")
        
        # take screenshot action
        self.actionscreenshot = QtWidgets.QAction(MainWindow)
        self.actionscreenshot.setObjectName("actionscreenshot")
        
        # generate report action
        self.actionreport = QtWidgets.QAction(MainWindow)
        self.actionreport.setObjectName("actionreport")
        
        self.menuFile.addAction(self.actionNew_window)
        self.menuFile.addAction(self.actionscreenshot)
        self.menuFile.addAction(self.actionreport)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.openButton.setText(_translate("MainWindow", "Open"))
        self.pause_resume_button.setText(_translate("MainWindow", "Play"))
        self.prevFrameButton.setText(_translate("MainWindow", "<"))
        self.nextFrameButton.setText(_translate("MainWindow", ">"))
        self.pushButton.setText(_translate("MainWindow", "go to"))
        self.groupBox.setTitle(_translate("MainWindow", "Tools"))
        self.hyoidTracking.setText(_translate("MainWindow", "Hyoid bone tracking"))
        self.bolusTracking.setText(_translate("MainWindow", "bolus tracking"))
        self.c2_c4_tracking.setText(_translate("MainWindow", "c2-c4 Tracking"))
        self.extraToolsButton.setText(_translate("MainWindow", "..."))
        item = self.inlineReport.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Begin Frame"))
        item = self.inlineReport.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "End Frame"))
        item = self.inlineReport.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Note"))
        item = self.inlineReport_2.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Begin Frame"))
        item = self.inlineReport_2.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "End Frame"))
        item = self.inlineReport_2.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Note"))
        self.label_6.setText(_translate("MainWindow", "100 %"))
        self.label.setText(_translate("MainWindow", "Contrast"))
        self.label_5.setText(_translate("MainWindow", "100 %"))
        self.label_2.setText(_translate("MainWindow", "brightness"))
        self.label_4.setText(_translate("MainWindow", "4X"))
        self.label_3.setText(_translate("MainWindow", "speed"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionNew_window.setText(_translate("MainWindow", "New window"))
        self.actionscreenshot.setText(_translate("MainWindow", "screenshot"))
        self.actionreport.setText(_translate("MainWindow", "report"))
        # self.raw_dist_label.setText(_translate("MainWindow", "Raw"))
        # self.filtered_dist_label.setText(_translate("MainWindow", "Filtered"))
        # self.gndtruth_dist_label.setText(_translate("MainWindow", "Ground truth"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
